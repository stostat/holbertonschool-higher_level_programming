 
``1-my_list.pt``
============================

Import function from module:
    >>> MyList = __import__('1-my_list').MyList

Checking for module docstring:
    >>> len(__import__("1-my_list").__doc__) > 1
    True

Checking for class docstring:
    >>> len(__import__("1-my_list").MyList.__doc__) > 1
    True

Checking for method docstring
    >>> len(__import__("1-my_list").MyList.print_sorted.__doc__) > 1
    True

Correct Class Type test:
    >>> ml = MyList()
    >>> type(ml) == MyList
    True

Empty:
    >>> obj = MyList()
    >>> print(obj)
    []
    >>> obj.print_sorted()
    []

Negative values:
    >>> obj = MyList()
    >>> obj.append(-5)
    >>> obj.append(1)
    >>> obj.append(-454)
    >>> obj.append(-33)
    >>> obj.append(-33)
    >>> print(obj)
    [-5, 1, -454, -33, -33]
    >>> obj.print_sorted()
    [-454, -33, -33, -5, 1]

NULL:
    >>> obj = MyList()
    >>> obj.append(NULL)
    Traceback (most recent call last):
    NameError: name 'NULL' is not defined
    >>> print(obj)
    []
    >>> obj.print_sorted()
    []

NaN:

    >>> obj = MyList()
    >>> obj.append(NaN)
    Traceback (most recent call last):
    NameError: name 'NaN' is not defined
    >>> print(obj)
    []
    >>> obj.print_sorted()
    []

None:
    >>> obj = MyList()
    >>> obj.append(None)
    >>> print(obj)
    [None]
    >>> obj.print_sorted()
    [None]

Arguments:
    >>> ml.__class__.print_sorted()
    Traceback (most recent call last):
    TypeError: print_sorted() missing 1 required positional argument: 'self'

    >>> ml.print_sorted([1, 2, 3], 1)
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 3 were given

    >>> ml.print_sorted([1, 2, 3])
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given